
set(target ${CMAKE_PROJECT_NAME})
set(root ${CMAKE_CURRENT_SOURCE_DIR})
set(definitions "")
set(includes)
set(libraries "")
set(compile_options "")

set(GOLXZNC_PACKAGE_NAME GolxznCore)
set(GOLXZNC_INCLUDE_DIR ${root}/code/include)
set(GOLXZNC_SOURCES_DIR ${root}/code/src)
set(GOLXZNC_TESTS_DIR ${root}/tests)
set(GOLXZNC_DEPENDENCIED_DIR ${root}/dependencies)
set(GOLXZNC_CXX_STANDARD 17)
set(GOLXZNC_ENABLE_EXCEPTIONS OFF CACHE BOOL "Use C++ exceptions")

set(GOLXZNC_CPM_VERSION "0.36.0" CACHE STRING "CMake Package Manager")

option(GOLXZNC_USE_BOOST "Use boost library" OFF)
if(GOLXZNC_USE_BOOST)
	set(GOLXZNC_BOOST_VERSION "1.80.0" CACHE STRING "Boost github version tag")
	mark_as_advanced(GOLXZNC_BOOST_VERSION)
endif()

option(GOLXZNC_DEVELOPER_MODE "Enable developer mode" OFF)
if(GOLXZNC_DEVELOPER_MODE)
	set(GOLXZNC_CATCH2_VERSION "3.2.0" CACHE STRING "Catch2 version")
	mark_as_advanced(GOLXZNC_CATCH2_VERSION)
	set(BUILD_TESTING ON CACHE BOOL "Build tests")
	option(BUILD_MCSS_DOCS "Build documentation using Doxygen and m.css" OFF)
	option(ENABLE_COVERAGE "Enable coverage support separate from CTest's" OFF)
endif()

include(cmake/config.cmake)

message(STATUS "-- -- -- -- -- -- -- -- -- -- -- -- Variables -- -- -- -- -- -- -- -- -- -- -- -- --")
message(STATUS "Target:                         | ${target}")
message(STATUS "Package:                        | ${GOLXZNC_PACKAGE_NAME}")
message(STATUS "C++ standard:                   | ${GOLXZNC_CXX_STANDARD}")
message(STATUS "Enable exceptions:              | ${GOLXZNC_ENABLE_EXCEPTIONS}")
message(STATUS "Is top level:                   | ${PROJECT_IS_TOP_LEVEL}")
message(STATUS "Developer mode:                 | ${GOLXZNC_DEVELOPER_MODE}")
message(STATUS "CMake Package Manager:          | ${GOLXZNC_CPM_VERSION}")
message(STATUS "CMake export compile commands:  | ${CMAKE_EXPORT_COMPILE_COMMANDS}")
message(STATUS "Directories:                    |")
message(STATUS "    Root:                       | ${root}")
message(STATUS "    Include:                    | ${GOLXZNC_INCLUDE_DIR}")
message(STATUS "    Sources:                    | ${GOLXZNC_SOURCES_DIR}")
message(STATUS "    Tests:                      | ${GOLXZNC_TESTS_DIR}")
message(STATUS "    Dependencies:               | ${GOLXZNC_DEPENDENCIED_DIR}")
message(STATUS "    Output:                     | ${CMAKE_BINARY_DIR}")

message(STATUS "Libraries:                      |")
if(GOLXZNC_USE_BOOST)
	message(STATUS "    Boost:                      | ${GOLXZNC_BOOST_VERSION}")
endif()

if(GOLXZNC_DEVELOPER_MODE)
	message(STATUS "    Catch2:                     | ${GOLXZNC_BOOST_VERSION}")
	message(STATUS "Build mcss docs:                | ${BUILD_MCSS_DOCS}")
	message(STATUS "Enable coverage:                | ${ENABLE_COVERAGE}")
	message(STATUS "Build testing:                  | ${BUILD_TESTING}")
endif()

message(STATUS "-- -- -- -- -- -- -- -- -- -- -- -- -- --- -- -- -- -- -- -- -- -- -- -- -- -- -- --")

